import{_ as n,p as s,q as a,a1 as e}from"./framework-5866ffd3.js";const t={},o=e(`<h1 id="event-bus" tabindex="-1"><a class="header-anchor" href="#event-bus" aria-hidden="true">#</a> Event Bus</h1><p>The Event Bus is a system that works based on events.<br> When you call <code>defineRule</code>, it returns an instance of <code>RouterRuleBus</code> that can be used to listen for the following events.</p><ul><li><code>rule-resolve</code><br> This event is triggered when any navigation is resolved.</li><li><code>rule-accept</code><br> This event is triggered when any navigation is accepted, more accurately, when <code>next()</code> or <code>next(true)</code> is called.</li><li><code>rule-deny</code><br> This event is triggered when any navigation is denied, more accurately, when <code>next(false)</code> is called.</li><li><code>rule-redirect</code><br> This event is triggered when any navigation is denied, more accurately, navigation is resolved without accept or denied.</li><li><code>no-rule-match</code><br> This event is triggered when no rule is match in the end. In this situation, navigation will be accepted by default.</li></ul><p>To use the event bus, simply do the following</p><div class="language-typescript" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> bus <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">defineRule</span><span class="token punctuation">(</span><span class="token doc-comment comment">/** ... */</span><span class="token punctuation">)</span>

bus<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;rule-resolve&#39;</span><span class="token punctuation">,</span> event <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>from<span class="token punctuation">)</span> <span class="token comment">// The guard parameter \`from\`</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>to<span class="token punctuation">)</span> <span class="token comment">// The guard parameter \`to\`</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>context<span class="token punctuation">)</span> <span class="token comment">// The final context object when resolved</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>remark<span class="token punctuation">)</span> <span class="token comment">// The remark of the resolved rule</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>index<span class="token punctuation">)</span> <span class="token comment">// The index of the resolved rule</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>event<span class="token punctuation">.</span>nextParam<span class="token punctuation">)</span> <span class="token comment">// The parameter passed in to \`next\` when resolved</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><p>Yes, it&#39;s quite straightforward!</p>`,6),c=[o];function p(l,i){return s(),a("div",null,c)}const r=n(t,[["render",p],["__file","event-bus.html.vue"]]);export{r as default};
