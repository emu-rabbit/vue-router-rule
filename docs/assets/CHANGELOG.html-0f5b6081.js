import{_ as e,p as i,q as l,a1 as o}from"./framework-5866ffd3.js";const t={},a=o('<h1 id="changelog" tabindex="-1"><a class="header-anchor" href="#changelog" aria-hidden="true">#</a> ChangeLog</h1><h2 id="v0-4-1" tabindex="-1"><a class="header-anchor" href="#v0-4-1" aria-hidden="true">#</a> v0.4.1</h2><ul><li>Feature <ul><li><code>RouterRule#remark</code>, <code>index</code> are accessible in bus events now</li></ul></li></ul><h2 id="v0-4-0" tabindex="-1"><a class="header-anchor" href="#v0-4-0" aria-hidden="true">#</a> v0.4.0</h2><ul><li><strong>BREAKING CHANGE</strong><ul><li><code>RouterRuleBuilder#save</code>, <code>RouterRuleBuilder#load</code> will now cache the result instead of run all conditions again</li><li><code>RouterRule&lt;C&gt;#execute</code> return type changed from boolean to an object contain the next parameter finally passed in</li></ul></li><li>Feature <ul><li>Event system bus for listening rule events</li></ul></li><li>Refactor <ul><li>Improve property SRP</li><li>Improve typing</li><li>Test workflow added</li></ul></li></ul><h2 id="v0-3-0" tabindex="-1"><a class="header-anchor" href="#v0-3-0" aria-hidden="true">#</a> v0.3.0</h2><ul><li><strong>BREAKING CHANGE</strong><ul><li>Rename interface <code>ConditionParams&lt;T&gt;</code> to <code>ExecutionEnvironment&lt;T&gt;</code></li><li><code>RouterRuleBuilder#next</code> params changed<br> (Now only accept parameter provider function instead of static parameter)</li><li>Remove <code>defineRule</code> parameter <code>initialContext</code><br> (If you want to initialize the context, Using <code>RouterRuleBuilder#do</code> &amp; <code>#continue</code> to define a first rule)</li><li>Generic <code>ContextType</code> must be a sub type of <code>object</code> now</li></ul></li><li>Feature <ul><li><code>RouterRuleBuilder#next</code>, <code>RouterRuleBuilder#redirect</code> now can get execution context to provide a dynamic location</li><li>New types <code>GuardEnvironment</code>, <code>ExecutionEnvironment&lt;T&gt;</code>, <code>Awaitable&lt;T&gt;</code> exported</li><li>Add <code>options</code> parameter to <code>defineRule</code></li><li>Debug console.info is more readable now</li></ul></li><li>Refactor <ul><li>More suitable interface names, variable names</li></ul></li></ul><h2 id="v0-2-0" tabindex="-1"><a class="header-anchor" href="#v0-2-0" aria-hidden="true">#</a> v0.2.0</h2><ul><li>Feature <ul><li>Add optional remark when construct new rule</li><li>Log remark in debug console.info</li></ul></li><li>Fix <ul><li>Declaration file not emitted</li></ul></li><li>Refactor <ul><li>Folder &amp; file structure</li></ul></li></ul><h2 id="v0-1-0" tabindex="-1"><a class="header-anchor" href="#v0-1-0" aria-hidden="true">#</a> v0.1.0</h2><p>Initial version of basic usage</p>',11),r=[a];function n(d,c){return i(),l("div",null,r)}const s=e(t,[["render",n],["__file","CHANGELOG.html.vue"]]);export{s as default};
